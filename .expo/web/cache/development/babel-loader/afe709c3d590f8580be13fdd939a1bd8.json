{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sango\\\\Downloads\\\\whiteHatJr\\\\C68\\\\willyapp\\\\AutoPopulateTextInput-master\\\\screens\\\\BookTransactionScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport db from \"../config\";\nimport * as firebase from 'firebase';\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                bookId: _this.state.scannedBookId,\n                studentId: _this.state.scannedStudentId,\n                type: \"issue\",\n                date: firebase.firestore.Timestamp.now().toDate()\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                Availability: false\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                NoOfBooksIssued: firebase.firestore.FieldValue.increment(1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                bookId: _this.state.scannedBookId,\n                studentId: _this.state.scannedStudentId,\n                type: \"return\",\n                date: firebase.firestore.Timestamp.now().toDate()\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                Availability: true\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                NoOfBooksIssued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee4(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db.collection(\"books\").doc(_this.state.scannedBookId).get().then(function (doc) {\n                var book = doc.data();\n                var transactionMessage = null;\n\n                if (book.Availability === true) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"bookIssue\";\n                  Alert.alert(transactionMessage);\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"bookReturn\";\n                  Alert.alert(transactionMessage);\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container\n        }, React.createElement(View, null, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          value: this.state.scannedBookId\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          value: this.state.scannedStudentId\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.handleTransaction;\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/sango/Downloads/whiteHatJr/C68/willyapp/AutoPopulateTextInput-master/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","db","firebase","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","initiateBookIssue","collection","add","bookId","state","scannedBookId","studentId","scannedStudentId","type","date","firestore","Timestamp","now","toDate","doc","update","Availability","NoOfBooksIssued","FieldValue","increment","initiateBookReturn","handleBarCodeScanned","data","handleTransaction","get","then","book","transactionMessage","Alert","alert","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","scanButton","buttonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet, Alert } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport db from '../config'\nimport * as firebase from 'firebase'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal'\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n    initiateBookIssue=async()=>{\n      db.collection(\"transaction\").add({\n        bookId:this.state.scannedBookId,\n        studentId:this.state.scannedStudentId,\n        type:\"issue\",\n        date:firebase.firestore.Timestamp.now().toDate()\n      })\n\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        Availability:false\n      })\n\n      db.collection(\"student\").doc(this.state.scannedStudentId).update({\n        NoOfBooksIssued:firebase.firestore.FieldValue.increment(1)\n      })\n    }\n    initiateBookReturn=async()=>{\n      db.collection(\"transaction\").add({\n        bookId:this.state.scannedBookId,\n        studentId:this.state.scannedStudentId,\n        type:\"return\",\n        date:firebase.firestore.Timestamp.now().toDate()\n      })\n\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        Availability:true\n      })\n\n      db.collection(\"student\").doc(this.state.scannedStudentId).update({\n        NoOfBooksIssued:firebase.firestore.FieldValue.increment(-1)\n      })\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    handleTransaction=async()=>{\n     db.collection(\"books\").doc(this.state.scannedBookId).get().then((doc)=>{\n      var book=doc.data()\n      var transactionMessage=null   \n      if (book.Availability===true){\n        this.initiateBookIssue()\n        transactionMessage=\"bookIssue\"\n        Alert.alert(transactionMessage)\n      }\n      else{\n        this.initiateBookReturn()\n        transactionMessage=\"bookReturn\"\n        Alert.alert(transactionMessage)\n      }\n     }\n     ) \n    }\n\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <View style={styles.container}>\n            <View>\n              <Image\n                source={require(\"../assets/booklogo.jpg\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Wily</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <TouchableOpacity\n             style={styles.scanButton}\n             onPress={()=>{this.handleTransaction}}>\n             <Text style={styles.buttonText}>Submit</Text> \n            </TouchableOpacity>\n\n          </View>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    }\n  });"]},"metadata":{},"sourceType":"module"}